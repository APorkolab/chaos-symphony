name: CI Build and Test

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    # Service containers to run integration tests against
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: test_orders
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        ports: ["5432:5432"]
        # Health check to wait until Postgres is ready
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      kafka:
        image: bitnami/kafka:latest
        ports: ["9092:9092"]
        env:
          KAFKA_CFG_NODE_ID: 0
          KAFKA_CFG_PROCESS_ROLES: controller,broker
          KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
          KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
          KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
          KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
          KAFKA_BROKER_ID: 1
          KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092

    steps:
      - uses: actions/checkout@v4

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Cache OWASP Dependency-Check data
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository/org/owasp/dependency-check-data
          key: dc-data-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            dc-data-${{ runner.os }}-

      - name: Purge DC database (safe to run)
        run: mvn -q org.owasp:dependency-check-maven:purge || true

      - name: Build, Test, and Dependency Check
        # Pass service connection details to the Maven build
        # Spring Boot tests will automatically pick these up
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:${{ job.services.postgres.ports[5432] }}/test_orders
          SPRING_DATASOURCE_USERNAME: test
          SPRING_DATASOURCE_PASSWORD: test
          SPRING_KAFKA_BOOTSTRAP_SERVERS: localhost:${{ job.services.kafka.ports[9092] }}
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
        run: mvn -U -B clean verify