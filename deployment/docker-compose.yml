version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment: { ZOOKEEPER_CLIENT_PORT: 2181 }
    networks: [chaos-net]

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    depends_on: [zookeeper]
    ports:
      - "29092:29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://127.0.0.1:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks: [chaos-net]

  connect:
    image: debezium/connect:2.6
    depends_on: [kafka]
    ports: ["8083:8083"]
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: "debezium"
      CONFIG_STORAGE_TOPIC: "debezium-config"
      OFFSET_STORAGE_TOPIC: "debezium-offset"
      STATUS_STORAGE_TOPIC: "debezium-status"
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
    networks: [chaos-net]

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    depends_on: [kafka]
    ports: ["9000:9000"]
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    networks: [chaos-net]

  prometheus:
    image: prom/prometheus
    ports: ["9090:9090"]
    volumes: ["./prometheus.yml:/etc/prometheus/prometheus.yml"]
    networks: [chaos-net]

  grafana:
    image: grafana/grafana:latest
    depends_on: [prometheus]
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports: ["${GRAFANA_PORT:-3000}:3000"]
    networks: [chaos-net]


networks:
  chaos-net:
    driver: bridge
